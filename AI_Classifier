{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"AI_Classifier","provenance":[],"collapsed_sections":[],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"F_zv38g8P3xs","colab_type":"code","outputId":"284c01fc-c4b0-4e60-c5af-f26c289d86e5","executionInfo":{"status":"ok","timestamp":1577985996605,"user_tz":-480,"elapsed":34454,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":122}},"source":["from google.colab import drive\n","import os\n","drive.mount('/content/gdrive')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/gdrive\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ME8LYNAx-U64","colab_type":"code","outputId":"9ef1ddbc-44d8-4fb7-a7b3-d963cba8a4e8","executionInfo":{"status":"ok","timestamp":1577986008554,"user_tz":-480,"elapsed":3550,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":80}},"source":["import tensorflow as tf\n","device_name = tf.test.gpu_device_name()\n","if device_name != '/device:GPU:0':\n","  raise SystemError('GPU device not found')\n","print('Found GPU at: {}'.format(device_name))"],"execution_count":0,"outputs":[{"output_type":"display_data","data":{"text/html":["<p style=\"color: red;\">\n","The default version of TensorFlow in Colab will soon switch to TensorFlow 2.x.<br>\n","We recommend you <a href=\"https://www.tensorflow.org/guide/migrate\" target=\"_blank\">upgrade</a> now \n","or ensure your notebook will continue to use TensorFlow 1.x via the <code>%tensorflow_version 1.x</code> magic:\n","<a href=\"https://colab.research.google.com/notebooks/tensorflow_version.ipynb\" target=\"_blank\">more info</a>.</p>\n"],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Found GPU at: /device:GPU:0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"iiNidlEhSctJ","colab_type":"text"},"source":["## This Notebook Demonstrates:\n","1. Reading the data in python, preparing it for analysis, and adjusting the labels to contain underscores\n","2. The code that simplfies a Raw drawing to the Simplified drawing\n","3. How to make a submission file with predictions in the required format"]},{"cell_type":"markdown","metadata":{"id":"w1YuOub_ShPU","colab_type":"text"},"source":["##引進函式庫"]},{"cell_type":"code","metadata":{"id":"HOBnF_oOLp4m","colab_type":"code","outputId":"9ab63c73-b246-4625-ba1d-ddcf086271cc","executionInfo":{"status":"ok","timestamp":1577986015595,"user_tz":-480,"elapsed":2094,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["import os\n","from glob import glob\n","import re\n","import ast\n","import numpy as np \n","import pandas as pd\n","import warnings\n","import ast\n","import math\n","import matplotlib.pyplot as plt\n","import matplotlib.style as style\n","import tensorflow as tf\n","from PIL import Image, ImageDraw \n","from tqdm import tqdm\n","from dask import bag\n","from tensorflow import keras\n","from tensorflow import keras\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D\n","from tensorflow.keras.layers import Dense, Dropout, Flatten, Activation\n","from tensorflow.keras.metrics import categorical_accuracy, top_k_categorical_accuracy, categorical_crossentropy\n","from tensorflow.keras.models import Sequential, load_model\n","from tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau, ModelCheckpoint\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.applications import MobileNet,MobileNetV2\n","from tensorflow.keras.applications.mobilenet import preprocess_input\n","\n","%matplotlib inline\n","%config InlineBackend.figure_format = 'retina'\n","\n","warnings.filterwarnings('ignore') # to suppress some matplotlib deprecation warnings\n","print(os.listdir(\"/content/gdrive/My Drive/input\"))\n","print(os.listdir(\"/content/gdrive/My Drive/input/train\"))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["['train', 'airplane_4.png', 'demo.csv', 'test_ans.csv', 'DS_Store', 'output.csv', 'test.csv', 'valid.csv', 'test_predict.csv']\n","['banana.csv', 'bandage.csv', 'bear.csv', 'bed.csv', 'bee.csv', 'belt.csv', 'cactus.csv', 'cake.csv', 'coffee cup.csv', 'door.csv', 'fork.csv', 'giraffe.csv', 'hand.csv', 'key.csv', 'laptop.csv', 'light bulb.csv', 'marker.csv', 'paintbrush.csv', 'popsicle.csv', 'raccoon.csv', 'rain.csv', 'roller coaster.csv', 'snail.csv', 'spoon.csv', 'swan.csv', 'The Great Wall of China.csv', 'toaster.csv', 'train.csv', 'whale.csv', 'wine bottle.csv']\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"j0WVCGewb-Jd","colab_type":"text"},"source":["##資料前處理"]},{"cell_type":"markdown","metadata":{"id":"S27f6YDJSm1v","colab_type":"text"},"source":["為了把資料變成tensorflow能處理的格式，首先我們用字典建立一個mapping，代表類別與數字間的轉換，並定義其反轉換。"]},{"cell_type":"code","metadata":{"id":"IfP4501pQVOi","colab_type":"code","outputId":"2a3a1ad8-d778-43cb-8b6e-cf6aee38e1c9","executionInfo":{"status":"ok","timestamp":1577986020143,"user_tz":-480,"elapsed":648,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":71}},"source":["class_paths =glob(\"/content/gdrive/My Drive/input/train/*.csv\") # 請填入放置訓練集的資料夾\n","print(class_paths)\n","numstonames = {i: v[14:-4].replace(\" \", \"_\") for i, v in enumerate(class_paths)} # word to numerics\n","\n","for i in numstonames:\n","  numstonames[i]= numstonames[i].replace(\"e/My_Drive/input/train/\",\"\")\n","print(numstonames)\n","\n","namestonums = {v:k for k,v in numstonames.items()}"],"execution_count":0,"outputs":[{"output_type":"stream","text":["['/content/gdrive/My Drive/input/train/banana.csv', '/content/gdrive/My Drive/input/train/bandage.csv', '/content/gdrive/My Drive/input/train/bear.csv', '/content/gdrive/My Drive/input/train/bed.csv', '/content/gdrive/My Drive/input/train/bee.csv', '/content/gdrive/My Drive/input/train/belt.csv', '/content/gdrive/My Drive/input/train/cactus.csv', '/content/gdrive/My Drive/input/train/cake.csv', '/content/gdrive/My Drive/input/train/coffee cup.csv', '/content/gdrive/My Drive/input/train/door.csv', '/content/gdrive/My Drive/input/train/fork.csv', '/content/gdrive/My Drive/input/train/giraffe.csv', '/content/gdrive/My Drive/input/train/hand.csv', '/content/gdrive/My Drive/input/train/key.csv', '/content/gdrive/My Drive/input/train/laptop.csv', '/content/gdrive/My Drive/input/train/light bulb.csv', '/content/gdrive/My Drive/input/train/marker.csv', '/content/gdrive/My Drive/input/train/paintbrush.csv', '/content/gdrive/My Drive/input/train/popsicle.csv', '/content/gdrive/My Drive/input/train/raccoon.csv', '/content/gdrive/My Drive/input/train/rain.csv', '/content/gdrive/My Drive/input/train/roller coaster.csv', '/content/gdrive/My Drive/input/train/snail.csv', '/content/gdrive/My Drive/input/train/spoon.csv', '/content/gdrive/My Drive/input/train/swan.csv', '/content/gdrive/My Drive/input/train/The Great Wall of China.csv', '/content/gdrive/My Drive/input/train/toaster.csv', '/content/gdrive/My Drive/input/train/train.csv', '/content/gdrive/My Drive/input/train/whale.csv', '/content/gdrive/My Drive/input/train/wine bottle.csv']\n","{0: 'banana', 1: 'bandage', 2: 'bear', 3: 'bed', 4: 'bee', 5: 'belt', 6: 'cactus', 7: 'cake', 8: 'coffee_cup', 9: 'door', 10: 'fork', 11: 'giraffe', 12: 'hand', 13: 'key', 14: 'laptop', 15: 'light_bulb', 16: 'marker', 17: 'paintbrush', 18: 'popsicle', 19: 'raccoon', 20: 'rain', 21: 'roller_coaster', 22: 'snail', 23: 'spoon', 24: 'swan', 25: 'The_Great_Wall_of_China', 26: 'toaster', 27: 'train', 28: 'whale', 29: 'wine_bottle'}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"qRAoBcvwSqg2","colab_type":"text"},"source":["接著定義訓練集的讀取方式。從資料庫內的每一類別中，都讀取ims_per_class張圖片，因此訓練及的大小總共是30*ims_per_class。接著我們定義畫圖函數，將資料轉成圖畫。"]},{"cell_type":"code","metadata":{"id":"D120hQAQQdAC","colab_type":"code","colab":{}},"source":["num_classes = 30 # 總共有30個類別\n","imheight, imwidth = 64, 64  # 每一張圖片的長度\n","ims_per_class = 12000 # 每一種類別讀幾張圖片\n","\n","def draw_it(strokes): # 畫圖，參考助教給的code\n","    image = Image.new(\"P\", (64,64), color=255)\n","    image_draw = ImageDraw.Draw(image)\n","    for stroke in ast.literal_eval(strokes):\n","        for i in range(len(stroke[0])-1):\n","            image_draw.line([stroke[0][i], \n","                             stroke[1][i],\n","                             stroke[0][i+1], \n","                             stroke[1][i+1]],\n","                            fill=0, width=5)\n","    image = image.resize((imheight, imwidth))\n","    return np.array(image)/255."],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"sIsEOxsjcmqW","colab_type":"text"},"source":["train_grand就是我們的訓練集。並使用畫圖函數，將30*ims_per_class張圖畫好後存入其中，最後再flatten掉它"]},{"cell_type":"code","metadata":{"id":"O0HS1X4HqMjt","colab_type":"code","outputId":"47dea0d9-47a2-479a-c4c6-476bc0adb835","executionInfo":{"status":"ok","timestamp":1577986250619,"user_tz":-480,"elapsed":224438,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["train_grand = [] # 先將訓練集儲存進來，總共儲存ims_per_class*30張圖片\n","\n","for i,c in enumerate(tqdm(class_paths[0: num_classes])): # 讀取訓練集\n","    train = pd.read_csv(c, nrows=ims_per_class)\n","    imagebag = bag.from_sequence(train.drawing.values).map(draw_it) \n","    trainarray = np.array(imagebag.compute())\n","    trainarray = np.reshape(trainarray, (ims_per_class, -1))    \n","    labelarray = np.full((train.shape[0], 1), i)\n","    trainarray = np.concatenate((labelarray, trainarray), axis=1)\n","    train_grand.append(trainarray)\n","    \n","#less memory than np.concatenate\n","train_grand = np.array([train_grand.pop() for i in np.arange(num_classes)]) # 改成numpy的array以利後續作業\n","train_grand = train_grand.reshape((-1, (imheight*imwidth+1))) # 改成64*64*1的大小"],"execution_count":0,"outputs":[{"output_type":"stream","text":["100%|██████████| 30/30 [03:35<00:00,  7.31s/it]\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"Tx2lfbburkRB","colab_type":"text"},"source":["檢查一下是否有正常讀入"]},{"cell_type":"code","metadata":{"id":"NO8QhJxYSuTm","colab_type":"code","outputId":"30e79842-c1d9-4e86-8038-a43843736927","executionInfo":{"status":"ok","timestamp":1577986330772,"user_tz":-480,"elapsed":2322,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["train_grand[359999] # 最後一張圖片，測試用"],"execution_count":0,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0., 1., 1., ..., 0., 0., 0.])"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"Gw9bMUvqc4ym","colab_type":"text"},"source":["接著我們把訓練集的數據以及標籤分開到X_train跟y_train內，並引進validation set，然後如同對訓練及一樣的方式處理之。"]},{"cell_type":"code","metadata":{"id":"AmOPgnZeSz9I","colab_type":"code","colab":{}},"source":["np.random.shuffle(train_grand)\n","y_train, X_train = train_grand[:, 0], train_grand[:, 1:] # 將訓練集拆開成圖片與標籤\n","\n","valid = pd.read_csv('/content/gdrive/My Drive/input/valid.csv',nrows = ims_per_class)\n","imagebag = bag.from_sequence(valid.drawing.values).map(draw_it)\n","validarray = np.array(imagebag.compute())\n","validarray = np.reshape(validarray, (validarray.shape[0], imheight, imwidth, 1))\n","\n","X_val = validarray\n","y_val = [namestonums[w.replace(' ','_') ] for w in valid.word]\n","\n","del train_grand\n","\n","# 將拆開後的訓練集與valid set用成可以丟進去的模型訓練的格式\n","y_train = keras.utils.to_categorical(y_train, num_classes)\n","X_train = X_train.reshape(X_train.shape[0], imheight, imwidth, 1)\n","y_val = keras.utils.to_categorical(y_val, num_classes)\n","X_val = X_val.reshape(X_val.shape[0], imheight, imwidth, 1)"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4ZDeKyL0TjpH","colab_type":"text"},"source":["## Model training"]},{"cell_type":"markdown","metadata":{"id":"stgShiWnTldS","colab_type":"text"},"source":["首先先引進keras內建的模型ResNet50。但這只是個空殼，需要給資料餵他才會開始學習。"]},{"cell_type":"code","metadata":{"id":"iYXWLYAqTj-k","colab_type":"code","outputId":"d38b2fe7-f243-4df5-f4eb-009352ee4079","executionInfo":{"status":"ok","timestamp":1577986361931,"user_tz":-480,"elapsed":5781,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["from tensorflow.keras.applications.resnet import ResNet50\n","from tensorflow.keras.applications.resnet_v2 import ResNet50V2\n","model = ResNet50(input_shape=(64, 64, 1),  weights=None, classes=30)\n","\n","model.trainable = True\n","\n","# adding regularization\n","regularizer = tf.keras.regularizers.l2(0.001)\n","\n","for layer in model.layers:\n","    for attr in ['kernel_regularizer']:\n","        if hasattr(layer, attr):\n","          setattr(layer, attr, regularizer)\n","model.summary()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.\n","Instructions for updating:\n","If using Keras pass *_constraint arguments to layers.\n","Model: \"resnet50\"\n","__________________________________________________________________________________________________\n","Layer (type)                    Output Shape         Param #     Connected to                     \n","==================================================================================================\n","input_1 (InputLayer)            [(None, 64, 64, 1)]  0                                            \n","__________________________________________________________________________________________________\n","conv1_pad (ZeroPadding2D)       (None, 70, 70, 1)    0           input_1[0][0]                    \n","__________________________________________________________________________________________________\n","conv1_conv (Conv2D)             (None, 32, 32, 64)   3200        conv1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","conv1_bn (BatchNormalization)   (None, 32, 32, 64)   256         conv1_conv[0][0]                 \n","__________________________________________________________________________________________________\n","conv1_relu (Activation)         (None, 32, 32, 64)   0           conv1_bn[0][0]                   \n","__________________________________________________________________________________________________\n","pool1_pad (ZeroPadding2D)       (None, 34, 34, 64)   0           conv1_relu[0][0]                 \n","__________________________________________________________________________________________________\n","pool1_pool (MaxPooling2D)       (None, 16, 16, 64)   0           pool1_pad[0][0]                  \n","__________________________________________________________________________________________________\n","conv2_block1_1_conv (Conv2D)    (None, 16, 16, 64)   4160        pool1_pool[0][0]                 \n","__________________________________________________________________________________________________\n","conv2_block1_1_bn (BatchNormali (None, 16, 16, 64)   256         conv2_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_1_relu (Activation (None, 16, 16, 64)   0           conv2_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_2_conv (Conv2D)    (None, 16, 16, 64)   36928       conv2_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_bn (BatchNormali (None, 16, 16, 64)   256         conv2_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_2_relu (Activation (None, 16, 16, 64)   0           conv2_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_0_conv (Conv2D)    (None, 16, 16, 256)  16640       pool1_pool[0][0]                 \n","__________________________________________________________________________________________________\n","conv2_block1_3_conv (Conv2D)    (None, 16, 16, 256)  16640       conv2_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_0_bn (BatchNormali (None, 16, 16, 256)  1024        conv2_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_3_bn (BatchNormali (None, 16, 16, 256)  1024        conv2_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block1_add (Add)          (None, 16, 16, 256)  0           conv2_block1_0_bn[0][0]          \n","                                                                 conv2_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block1_out (Activation)   (None, 16, 16, 256)  0           conv2_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block2_1_conv (Conv2D)    (None, 16, 16, 64)   16448       conv2_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block2_1_bn (BatchNormali (None, 16, 16, 64)   256         conv2_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_1_relu (Activation (None, 16, 16, 64)   0           conv2_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_2_conv (Conv2D)    (None, 16, 16, 64)   36928       conv2_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_bn (BatchNormali (None, 16, 16, 64)   256         conv2_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_2_relu (Activation (None, 16, 16, 64)   0           conv2_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_3_conv (Conv2D)    (None, 16, 16, 256)  16640       conv2_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_3_bn (BatchNormali (None, 16, 16, 256)  1024        conv2_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block2_add (Add)          (None, 16, 16, 256)  0           conv2_block1_out[0][0]           \n","                                                                 conv2_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block2_out (Activation)   (None, 16, 16, 256)  0           conv2_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_1_conv (Conv2D)    (None, 16, 16, 64)   16448       conv2_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv2_block3_1_bn (BatchNormali (None, 16, 16, 64)   256         conv2_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_1_relu (Activation (None, 16, 16, 64)   0           conv2_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_2_conv (Conv2D)    (None, 16, 16, 64)   36928       conv2_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_bn (BatchNormali (None, 16, 16, 64)   256         conv2_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_2_relu (Activation (None, 16, 16, 64)   0           conv2_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_3_conv (Conv2D)    (None, 16, 16, 256)  16640       conv2_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_3_bn (BatchNormali (None, 16, 16, 256)  1024        conv2_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv2_block3_add (Add)          (None, 16, 16, 256)  0           conv2_block2_out[0][0]           \n","                                                                 conv2_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv2_block3_out (Activation)   (None, 16, 16, 256)  0           conv2_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_1_conv (Conv2D)    (None, 8, 8, 128)    32896       conv2_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_1_bn (BatchNormali (None, 8, 8, 128)    512         conv3_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_1_relu (Activation (None, 8, 8, 128)    0           conv3_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_2_conv (Conv2D)    (None, 8, 8, 128)    147584      conv3_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_bn (BatchNormali (None, 8, 8, 128)    512         conv3_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_2_relu (Activation (None, 8, 8, 128)    0           conv3_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_0_conv (Conv2D)    (None, 8, 8, 512)    131584      conv2_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block1_3_conv (Conv2D)    (None, 8, 8, 512)    66048       conv3_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_0_bn (BatchNormali (None, 8, 8, 512)    2048        conv3_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_3_bn (BatchNormali (None, 8, 8, 512)    2048        conv3_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block1_add (Add)          (None, 8, 8, 512)    0           conv3_block1_0_bn[0][0]          \n","                                                                 conv3_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block1_out (Activation)   (None, 8, 8, 512)    0           conv3_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block2_1_conv (Conv2D)    (None, 8, 8, 128)    65664       conv3_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block2_1_bn (BatchNormali (None, 8, 8, 128)    512         conv3_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_1_relu (Activation (None, 8, 8, 128)    0           conv3_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_2_conv (Conv2D)    (None, 8, 8, 128)    147584      conv3_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_bn (BatchNormali (None, 8, 8, 128)    512         conv3_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_2_relu (Activation (None, 8, 8, 128)    0           conv3_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_3_conv (Conv2D)    (None, 8, 8, 512)    66048       conv3_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_3_bn (BatchNormali (None, 8, 8, 512)    2048        conv3_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block2_add (Add)          (None, 8, 8, 512)    0           conv3_block1_out[0][0]           \n","                                                                 conv3_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block2_out (Activation)   (None, 8, 8, 512)    0           conv3_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block3_1_conv (Conv2D)    (None, 8, 8, 128)    65664       conv3_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block3_1_bn (BatchNormali (None, 8, 8, 128)    512         conv3_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_1_relu (Activation (None, 8, 8, 128)    0           conv3_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_2_conv (Conv2D)    (None, 8, 8, 128)    147584      conv3_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_bn (BatchNormali (None, 8, 8, 128)    512         conv3_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_2_relu (Activation (None, 8, 8, 128)    0           conv3_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_3_conv (Conv2D)    (None, 8, 8, 512)    66048       conv3_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_3_bn (BatchNormali (None, 8, 8, 512)    2048        conv3_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block3_add (Add)          (None, 8, 8, 512)    0           conv3_block2_out[0][0]           \n","                                                                 conv3_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block3_out (Activation)   (None, 8, 8, 512)    0           conv3_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_1_conv (Conv2D)    (None, 8, 8, 128)    65664       conv3_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv3_block4_1_bn (BatchNormali (None, 8, 8, 128)    512         conv3_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_1_relu (Activation (None, 8, 8, 128)    0           conv3_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_2_conv (Conv2D)    (None, 8, 8, 128)    147584      conv3_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_bn (BatchNormali (None, 8, 8, 128)    512         conv3_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_2_relu (Activation (None, 8, 8, 128)    0           conv3_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_3_conv (Conv2D)    (None, 8, 8, 512)    66048       conv3_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_3_bn (BatchNormali (None, 8, 8, 512)    2048        conv3_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv3_block4_add (Add)          (None, 8, 8, 512)    0           conv3_block3_out[0][0]           \n","                                                                 conv3_block4_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv3_block4_out (Activation)   (None, 8, 8, 512)    0           conv3_block4_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_1_conv (Conv2D)    (None, 4, 4, 256)    131328      conv3_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_1_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_1_relu (Activation (None, 4, 4, 256)    0           conv4_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_2_conv (Conv2D)    (None, 4, 4, 256)    590080      conv4_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_2_relu (Activation (None, 4, 4, 256)    0           conv4_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_0_conv (Conv2D)    (None, 4, 4, 1024)   525312      conv3_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block1_3_conv (Conv2D)    (None, 4, 4, 1024)   263168      conv4_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_0_bn (BatchNormali (None, 4, 4, 1024)   4096        conv4_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_3_bn (BatchNormali (None, 4, 4, 1024)   4096        conv4_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block1_add (Add)          (None, 4, 4, 1024)   0           conv4_block1_0_bn[0][0]          \n","                                                                 conv4_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block1_out (Activation)   (None, 4, 4, 1024)   0           conv4_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block2_1_conv (Conv2D)    (None, 4, 4, 256)    262400      conv4_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block2_1_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_1_relu (Activation (None, 4, 4, 256)    0           conv4_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_2_conv (Conv2D)    (None, 4, 4, 256)    590080      conv4_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_2_relu (Activation (None, 4, 4, 256)    0           conv4_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_3_conv (Conv2D)    (None, 4, 4, 1024)   263168      conv4_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_3_bn (BatchNormali (None, 4, 4, 1024)   4096        conv4_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block2_add (Add)          (None, 4, 4, 1024)   0           conv4_block1_out[0][0]           \n","                                                                 conv4_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block2_out (Activation)   (None, 4, 4, 1024)   0           conv4_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block3_1_conv (Conv2D)    (None, 4, 4, 256)    262400      conv4_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block3_1_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_1_relu (Activation (None, 4, 4, 256)    0           conv4_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_2_conv (Conv2D)    (None, 4, 4, 256)    590080      conv4_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_2_relu (Activation (None, 4, 4, 256)    0           conv4_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_3_conv (Conv2D)    (None, 4, 4, 1024)   263168      conv4_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_3_bn (BatchNormali (None, 4, 4, 1024)   4096        conv4_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block3_add (Add)          (None, 4, 4, 1024)   0           conv4_block2_out[0][0]           \n","                                                                 conv4_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block3_out (Activation)   (None, 4, 4, 1024)   0           conv4_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block4_1_conv (Conv2D)    (None, 4, 4, 256)    262400      conv4_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block4_1_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block4_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_1_relu (Activation (None, 4, 4, 256)    0           conv4_block4_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_2_conv (Conv2D)    (None, 4, 4, 256)    590080      conv4_block4_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block4_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_2_relu (Activation (None, 4, 4, 256)    0           conv4_block4_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_3_conv (Conv2D)    (None, 4, 4, 1024)   263168      conv4_block4_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_3_bn (BatchNormali (None, 4, 4, 1024)   4096        conv4_block4_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block4_add (Add)          (None, 4, 4, 1024)   0           conv4_block3_out[0][0]           \n","                                                                 conv4_block4_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block4_out (Activation)   (None, 4, 4, 1024)   0           conv4_block4_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block5_1_conv (Conv2D)    (None, 4, 4, 256)    262400      conv4_block4_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block5_1_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block5_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_1_relu (Activation (None, 4, 4, 256)    0           conv4_block5_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_2_conv (Conv2D)    (None, 4, 4, 256)    590080      conv4_block5_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block5_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_2_relu (Activation (None, 4, 4, 256)    0           conv4_block5_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_3_conv (Conv2D)    (None, 4, 4, 1024)   263168      conv4_block5_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_3_bn (BatchNormali (None, 4, 4, 1024)   4096        conv4_block5_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block5_add (Add)          (None, 4, 4, 1024)   0           conv4_block4_out[0][0]           \n","                                                                 conv4_block5_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block5_out (Activation)   (None, 4, 4, 1024)   0           conv4_block5_add[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_1_conv (Conv2D)    (None, 4, 4, 256)    262400      conv4_block5_out[0][0]           \n","__________________________________________________________________________________________________\n","conv4_block6_1_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block6_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_1_relu (Activation (None, 4, 4, 256)    0           conv4_block6_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_2_conv (Conv2D)    (None, 4, 4, 256)    590080      conv4_block6_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_bn (BatchNormali (None, 4, 4, 256)    1024        conv4_block6_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_2_relu (Activation (None, 4, 4, 256)    0           conv4_block6_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_3_conv (Conv2D)    (None, 4, 4, 1024)   263168      conv4_block6_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_3_bn (BatchNormali (None, 4, 4, 1024)   4096        conv4_block6_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv4_block6_add (Add)          (None, 4, 4, 1024)   0           conv4_block5_out[0][0]           \n","                                                                 conv4_block6_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv4_block6_out (Activation)   (None, 4, 4, 1024)   0           conv4_block6_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_1_conv (Conv2D)    (None, 2, 2, 512)    524800      conv4_block6_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_1_bn (BatchNormali (None, 2, 2, 512)    2048        conv5_block1_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_1_relu (Activation (None, 2, 2, 512)    0           conv5_block1_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_2_conv (Conv2D)    (None, 2, 2, 512)    2359808     conv5_block1_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_bn (BatchNormali (None, 2, 2, 512)    2048        conv5_block1_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_2_relu (Activation (None, 2, 2, 512)    0           conv5_block1_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_0_conv (Conv2D)    (None, 2, 2, 2048)   2099200     conv4_block6_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block1_3_conv (Conv2D)    (None, 2, 2, 2048)   1050624     conv5_block1_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_0_bn (BatchNormali (None, 2, 2, 2048)   8192        conv5_block1_0_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_3_bn (BatchNormali (None, 2, 2, 2048)   8192        conv5_block1_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block1_add (Add)          (None, 2, 2, 2048)   0           conv5_block1_0_bn[0][0]          \n","                                                                 conv5_block1_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block1_out (Activation)   (None, 2, 2, 2048)   0           conv5_block1_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block2_1_conv (Conv2D)    (None, 2, 2, 512)    1049088     conv5_block1_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block2_1_bn (BatchNormali (None, 2, 2, 512)    2048        conv5_block2_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_1_relu (Activation (None, 2, 2, 512)    0           conv5_block2_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_2_conv (Conv2D)    (None, 2, 2, 512)    2359808     conv5_block2_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_bn (BatchNormali (None, 2, 2, 512)    2048        conv5_block2_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_2_relu (Activation (None, 2, 2, 512)    0           conv5_block2_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_3_conv (Conv2D)    (None, 2, 2, 2048)   1050624     conv5_block2_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_3_bn (BatchNormali (None, 2, 2, 2048)   8192        conv5_block2_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block2_add (Add)          (None, 2, 2, 2048)   0           conv5_block1_out[0][0]           \n","                                                                 conv5_block2_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block2_out (Activation)   (None, 2, 2, 2048)   0           conv5_block2_add[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block3_1_conv (Conv2D)    (None, 2, 2, 512)    1049088     conv5_block2_out[0][0]           \n","__________________________________________________________________________________________________\n","conv5_block3_1_bn (BatchNormali (None, 2, 2, 512)    2048        conv5_block3_1_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_1_relu (Activation (None, 2, 2, 512)    0           conv5_block3_1_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_2_conv (Conv2D)    (None, 2, 2, 512)    2359808     conv5_block3_1_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_bn (BatchNormali (None, 2, 2, 512)    2048        conv5_block3_2_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_2_relu (Activation (None, 2, 2, 512)    0           conv5_block3_2_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_3_conv (Conv2D)    (None, 2, 2, 2048)   1050624     conv5_block3_2_relu[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_3_bn (BatchNormali (None, 2, 2, 2048)   8192        conv5_block3_3_conv[0][0]        \n","__________________________________________________________________________________________________\n","conv5_block3_add (Add)          (None, 2, 2, 2048)   0           conv5_block2_out[0][0]           \n","                                                                 conv5_block3_3_bn[0][0]          \n","__________________________________________________________________________________________________\n","conv5_block3_out (Activation)   (None, 2, 2, 2048)   0           conv5_block3_add[0][0]           \n","__________________________________________________________________________________________________\n","avg_pool (GlobalAveragePooling2 (None, 2048)         0           conv5_block3_out[0][0]           \n","__________________________________________________________________________________________________\n","probs (Dense)                   (None, 30)           61470       avg_pool[0][0]                   \n","==================================================================================================\n","Total params: 23,642,910\n","Trainable params: 23,589,790\n","Non-trainable params: 53,120\n","__________________________________________________________________________________________________\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"2Rmty_YsdKvm","colab_type":"text"},"source":["開始計時(train要花的時間)"]},{"cell_type":"code","metadata":{"id":"mky6lxCIVCCX","colab_type":"code","colab":{}},"source":["import time\n","starttime = time.time()"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"CWBgulhadOLt","colab_type":"text"},"source":["開始train model"]},{"cell_type":"code","metadata":{"id":"_ucslU4OVD1F","colab_type":"code","outputId":"e0fdf071-344e-4b06-86a1-3024eea71d06","executionInfo":{"status":"ok","timestamp":1577989314602,"user_tz":-480,"elapsed":2928692,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":442}},"source":["def top_3_accuracy(x,y): \n","    t3 = top_k_categorical_accuracy(x,y, 3)\n","    return t3\n","\n","reduceLROnPlat = ReduceLROnPlateau(monitor='val_loss', factor=0.5, patience=3, min_delta=0.002,\n","                          mode='max', min_lr=1e-5, verbose=1)\n","callbacks = [reduceLROnPlat]\n","\n","model.compile(loss='categorical_crossentropy',\n","              optimizer=keras.optimizers.Adam(learning_rate=0.001),\n","              #metrics=['accuracy', top_3_accuracy]\n","              metrics=['accuracy']\n","              )\n","model.fit(x=X_train, y=y_train,\n","          batch_size =128, # 一批資料要多少個\n","          epochs = 10,   # 迭代幾次，發現7次的效果最好\n","          validation_data = (X_val, y_val), # 選擇validation set\n","          callbacks = callbacks,\n","          verbose = 1\n","          )\n","endtime = time.time()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Train on 360000 samples, validate on 12000 samples\n","Epoch 1/10\n","360000/360000 [==============================] - 303s 843us/sample - loss: 2.3392 - acc: 0.3364 - val_loss: 4.2964 - val_acc: 0.1874\n","Epoch 2/10\n","360000/360000 [==============================] - 290s 804us/sample - loss: 2.0255 - acc: 0.4097 - val_loss: 1.9953 - val_acc: 0.4213\n","Epoch 3/10\n","360000/360000 [==============================] - 290s 804us/sample - loss: 1.9315 - acc: 0.4321 - val_loss: 1.9874 - val_acc: 0.4134\n","Epoch 4/10\n","359936/360000 [============================>.] - ETA: 0s - loss: 1.8742 - acc: 0.4471\n","Epoch 00004: ReduceLROnPlateau reducing learning rate to 0.0005000000237487257.\n","360000/360000 [==============================] - 290s 804us/sample - loss: 1.8741 - acc: 0.4471 - val_loss: 1.9357 - val_acc: 0.4263\n","Epoch 5/10\n","360000/360000 [==============================] - 289s 804us/sample - loss: 1.7579 - acc: 0.4766 - val_loss: 2.0911 - val_acc: 0.4187\n","Epoch 6/10\n","360000/360000 [==============================] - 290s 806us/sample - loss: 1.6991 - acc: 0.4924 - val_loss: 1.8920 - val_acc: 0.4409\n","Epoch 7/10\n","360000/360000 [==============================] - 291s 807us/sample - loss: 1.6379 - acc: 0.5080 - val_loss: 5.8345 - val_acc: 0.2105\n","Epoch 8/10\n","360000/360000 [==============================] - 290s 806us/sample - loss: 1.5643 - acc: 0.5281 - val_loss: 1.9208 - val_acc: 0.4442\n","Epoch 9/10\n","360000/360000 [==============================] - 290s 807us/sample - loss: 1.4845 - acc: 0.5503 - val_loss: 1.9926 - val_acc: 0.4363\n","Epoch 10/10\n","359936/360000 [============================>.] - ETA: 0s - loss: 1.4005 - acc: 0.5741\n","Epoch 00010: ReduceLROnPlateau reducing learning rate to 0.0002500000118743628.\n","360000/360000 [==============================] - 290s 807us/sample - loss: 1.4004 - acc: 0.5742 - val_loss: 2.0887 - val_acc: 0.4354\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"X_I1MfWQhv_f","colab_type":"text"},"source":["預測完後的正確率"]},{"cell_type":"code","metadata":{"id":"f6NE4mxoVFWn","colab_type":"code","outputId":"5e3300f4-28b3-4c28-9568-bd7e3645fac5","executionInfo":{"status":"ok","timestamp":1577989746499,"user_tz":-480,"elapsed":6930,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["scores = model.evaluate(X_val, y_val, verbose=0)\n","print('Final CNN accuracy: ', scores[1]*100, \"%\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Final CNN accuracy:  43.541666865348816 %\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Kpkn01CnXVu2","colab_type":"text"},"source":["儲存模型"]},{"cell_type":"code","metadata":{"id":"mdVvdmlOVGjm","colab_type":"code","outputId":"7339fd52-eb0e-4d13-d86d-e4ff7dd7210c","executionInfo":{"status":"ok","timestamp":1577991304697,"user_tz":-480,"elapsed":5159,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":34}},"source":["def top_3_accuracy(y_true, y_pred):\n","    return top_k_categorical_accuracy(y_true, y_pred, k=3)\n","model.save_weights('/content/gdrive/My Drive/Colab Notebooks/Benny4.h5')\n","model.save('/content/gdrive/My Drive/Colab Notebooks/Benny4.model')\n","print (\"Model is saved\")"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Model is saved\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"76TiKeqBVM_k","colab_type":"text"},"source":["## 模型測試"]},{"cell_type":"markdown","metadata":{"id":"IJdRexNofEc6","colab_type":"text"},"source":["model要compile過才能用的樣子"]},{"cell_type":"code","metadata":{"id":"xGmzld0cVJYO","colab_type":"code","outputId":"d27a44f0-223c-4ea0-fb5c-e2f1511fa8db","executionInfo":{"status":"error","timestamp":1577998684399,"user_tz":-480,"elapsed":693,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":233}},"source":["model = tf.keras.models.load_model('/content/gdrive/My Drive/Colab Notebooks/Benny1.model')\n","\n","regularizer = tf.keras.regularizers.l2(0.001)\n","\n","for layer in model.layers:\n","    for attr in ['kernel_regularizer']:\n","        if hasattr(layer, attr):\n","          setattr(layer, attr, regularizer)\n","\n","model.compile(optimizer = Adam(lr = 0.001), loss = 'categorical_crossentropy', metrics = [\"accuracy\"])\n","model.summary()"],"execution_count":0,"outputs":[{"output_type":"error","ename":"NameError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-1-416b739e0b8b>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload_model\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/gdrive/My Drive/Colab Notebooks/Benny1.model'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mregularizer\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mregularizers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0ml2\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.001\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mlayer\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayers\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'tf' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"pJ2z3CQhfTgz","colab_type":"text"},"source":["測試model能不能正常運作"]},{"cell_type":"code","metadata":{"id":"fvvFl6eDVPIe","colab_type":"code","colab":{}},"source":["test = pd.read_csv('/content/gdrive/My Drive/input/demo.csv')[['drawing']]\n","imagebag = bag.from_sequence(test.drawing.values).map(draw_it)\n","testarray = np.array(imagebag.compute())\n","testarray = np.reshape(testarray, (testarray.shape[0], imheight, imwidth, 1))\n","testpreds = model.predict(testarray, verbose=0)\n","ttvs = np.argsort(-testpreds)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"xYJ1e8PvVQ_m","colab_type":"code","outputId":"1307ffde-09e1-4606-f2e3-02d4dbf12c86","executionInfo":{"status":"ok","timestamp":1577970298541,"user_tz":-480,"elapsed":637,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":357}},"source":["for idx in ttvs[:,[0,1,2]]:\n","    print(numstonames[idx[0]])\n","    print(numstonames[idx[1]])\n","    print(numstonames[idx[2]])\n","    print('----------')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["e/My_Drive/input/train/banana\n","e/My_Drive/input/train/giraffe\n","e/My_Drive/input/train/cactus\n","----------\n","e/My_Drive/input/train/banana\n","e/My_Drive/input/train/cactus\n","e/My_Drive/input/train/giraffe\n","----------\n","e/My_Drive/input/train/banana\n","e/My_Drive/input/train/giraffe\n","e/My_Drive/input/train/cactus\n","----------\n","e/My_Drive/input/train/paintbrush\n","e/My_Drive/input/train/cactus\n","e/My_Drive/input/train/banana\n","----------\n","e/My_Drive/input/train/paintbrush\n","e/My_Drive/input/train/banana\n","e/My_Drive/input/train/cactus\n","----------\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"pmbGrePPVVGI","colab_type":"text"},"source":["## Preprocessing the generating data and predict"]},{"cell_type":"code","metadata":{"id":"JLPWEIdnVTJI","colab_type":"code","outputId":"f795d969-1055-4036-c7af-fb39d7c674ed","executionInfo":{"status":"error","timestamp":1577937564786,"user_tz":-480,"elapsed":608,"user":{"displayName":"李丞恩","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mC5ipRTaH_7etk-li1gVLYweGkfcahVyTPFXKW2=s64","userId":"08110211111776616045"}},"colab":{"base_uri":"https://localhost:8080/","height":444}},"source":["graph = pd.read_csv('/content/gdrive/My Drive/output.csv',header=None)\n","grapharray = np.array(graph)\n","grapharray = np.where(grapharray[:] > 0.2,1,0)\n","grapharray = np.reshape(grapharray, (1,imheight, imwidth, 1))\n","graphpreds = model.predict(grapharray, verbose=0)\n","gvs = np.argsort(-graphpreds)\n","\n","for idx in gvs[:]:\n","    for i in idx:\n","        print(numstonames[i])"],"execution_count":0,"outputs":[{"output_type":"error","ename":"FileNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-25-23f24ac07c30>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mgraph\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpd\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mread_csv\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/gdrive/My Drive/output.csv'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mheader\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mgrapharray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgraph\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mgrapharray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwhere\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgrapharray\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0;36m0.2\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mgrapharray\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mreshape\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgrapharray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0mimheight\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mimwidth\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mgraphpreds\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mgrapharray\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36mparser_f\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, squeeze, prefix, mangle_dupe_cols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, dialect, error_bad_lines, warn_bad_lines, delim_whitespace, low_memory, memory_map, float_precision)\u001b[0m\n\u001b[1;32m    683\u001b[0m         )\n\u001b[1;32m    684\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 685\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0m_read\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfilepath_or_buffer\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    686\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    687\u001b[0m     \u001b[0mparser_f\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m__name__\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    455\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    456\u001b[0m     \u001b[0;31m# Create the parser.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 457\u001b[0;31m     \u001b[0mparser\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mTextFileReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfp_or_buf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    458\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    459\u001b[0m     \u001b[0;32mif\u001b[0m \u001b[0mchunksize\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0miterator\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m    893\u001b[0m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"has_index_names\"\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    894\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 895\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mengine\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    896\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    897\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mclose\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m_make_engine\u001b[0;34m(self, engine)\u001b[0m\n\u001b[1;32m   1133\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0m_make_engine\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mengine\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"c\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1134\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"c\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1135\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mCParserWrapper\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0moptions\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1136\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1137\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mengine\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"python\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.6/dist-packages/pandas/io/parsers.py\u001b[0m in \u001b[0;36m__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m   1915\u001b[0m         \u001b[0mkwds\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m\"usecols\"\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0musecols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1916\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1917\u001b[0;31m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mparsers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mTextReader\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0msrc\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m**\u001b[0m\u001b[0mkwds\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1918\u001b[0m         \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_reader\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0munnamed_cols\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1919\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader.__cinit__\u001b[0;34m()\u001b[0m\n","\u001b[0;32mpandas/_libs/parsers.pyx\u001b[0m in \u001b[0;36mpandas._libs.parsers.TextReader._setup_parser_source\u001b[0;34m()\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] File b'/content/gdrive/My Drive/output.csv' does not exist: b'/content/gdrive/My Drive/output.csv'"]}]},{"cell_type":"markdown","metadata":{"id":"G2cERt-sVYJF","colab_type":"text"},"source":["## Making a Submission"]},{"cell_type":"code","metadata":{"id":"lnDs8VrYVY6v","colab_type":"code","colab":{}},"source":["test = pd.read_csv('/content/gdrive/My Drive/input/test.csv')[['drawing']]\n","imagebag = bag.from_sequence(test.drawing.values).map(draw_it)\n","testarray = np.array(imagebag.compute())\n","testarray = np.reshape(testarray, (testarray.shape[0], imheight, imwidth, 1))\n","testpreds = model.predict(testarray, verbose=0)\n","ttvs = np.argsort(-testpreds)\n","\n","numstonames = {i: v[14:-4].replace(\" \", \"_\") for i, v in enumerate(class_paths)}\n","for i in numstonames:\n","  numstonames[i]= numstonames[i].replace(\"/content/gdrive/My Drive/input/train\",\"\")\n","\n","predict_label = [numstonames[ttvs[i][0]] for i in range(ttvs.shape[0])]\n","\n","test['word'] = predict_label\n","test.to_csv('/content/gdrive/My Drive/input/test_predict.csv')"],"execution_count":0,"outputs":[]}]}